/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import javax.swing.JCheckBox;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;
import volvis.RaycastMode;
import volvis.RaycastRenderer;
import volvis.TFColor;
import java.awt.Color;

/**
 *
 * @author michel
 */
public class RaycastRendererPanel extends javax.swing.JPanel {

    RaycastRenderer renderer;
    TransferFunctionEditor tfEditor = null;
    TransferFunction2DEditor tfEditor2D = null;

    /**
     * Creates new form RaycastRendererPanel
     */
    public RaycastRendererPanel(RaycastRenderer renderer) {
        initComponents();
        this.renderer = renderer;
        this.colorButton.setBackground(new Color(255, 255, 0));
        this.colorButton1.setBackground(new Color(255, 255, 0));
    }

    public void setSpeedLabel(String text) {
        renderingSpeedLabel.setText(text);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        renderingSpeedLabel = new javax.swing.JLabel();
        slicerButton = new javax.swing.JRadioButton();
        mipButton = new javax.swing.JRadioButton();
        compositingButton = new javax.swing.JRadioButton();
        tf2dButton = new javax.swing.JRadioButton();
        shadingCheckbox = new javax.swing.JCheckBox();
        isoSurfaceButton = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        IsovalueTextBox = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        colorButton = new javax.swing.JButton();
        cuttingPlaneCheckbox = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        slicerButton2 = new javax.swing.JRadioButton();
        mipButton2 = new javax.swing.JRadioButton();
        compositingButton2 = new javax.swing.JRadioButton();
        isosurfaceButton2 = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        IsovalueTextBox1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        colorButton1 = new javax.swing.JButton();
        transferFunction2dButton = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();

        jLabel1.setText("Rendering time (ms):");

        renderingSpeedLabel.setText("jLabel2");

        buttonGroup1.add(slicerButton);
        slicerButton.setSelected(true);
        slicerButton.setText("Slicer");
        slicerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slicerButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(mipButton);
        mipButton.setText("MIP");
        mipButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mipButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(compositingButton);
        compositingButton.setText("Compositing");
        compositingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compositingButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(tf2dButton);
        tf2dButton.setText("2D Transfer function");
        tf2dButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf2dButtonActionPerformed(evt);
            }
        });

        shadingCheckbox.setText("Volume shading");
        shadingCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shadingCheckboxActionPerformed(evt);
            }
        });

        buttonGroup1.add(isoSurfaceButton);
        isoSurfaceButton.setText("Isosurface");
        isoSurfaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isoSurfaceButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Isovalue:");

        IsovalueTextBox.setText("95.0");
        IsovalueTextBox.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        IsovalueTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IsovalueTextBoxActionPerformed(evt);
            }
        });

        jLabel3.setText("Color:");

        colorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorButtonActionPerformed(evt);
            }
        });

        cuttingPlaneCheckbox.setText("Cutting plane");
        cuttingPlaneCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuttingPlaneCheckboxActionPerformed(evt);
            }
        });

        jLabel4.setText("Back mode");
        jLabel4.setEnabled(cuttingPlaneCheckbox.isEnabled());

        buttonGroup2.add(slicerButton2);
        slicerButton2.setSelected(true);
        slicerButton2.setText("Invisible");
        slicerButton2.setEnabled(cuttingPlaneCheckbox.isSelected());
        slicerButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slicerButton2ActionPerformed(evt);
            }
        });

        buttonGroup2.add(mipButton2);
        mipButton2.setText("MIP");
        mipButton2.setEnabled(cuttingPlaneCheckbox.isSelected());
        mipButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mipButton2ActionPerformed(evt);
            }
        });

        buttonGroup2.add(compositingButton2);
        compositingButton2.setText("Compositing");
        compositingButton2.setEnabled(cuttingPlaneCheckbox.isSelected());
        compositingButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compositingButton2ActionPerformed(evt);
            }
        });

        buttonGroup2.add(isosurfaceButton2);
        isosurfaceButton2.setText("Isosurface");
        isosurfaceButton2.setEnabled(cuttingPlaneCheckbox.isSelected());
        isosurfaceButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isosurfaceButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Isovalue:");

        IsovalueTextBox1.setText("95.0");
        IsovalueTextBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        IsovalueTextBox1.setEnabled(cuttingPlaneCheckbox.isSelected());
        IsovalueTextBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IsovalueTextBox1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Color:");

        colorButton1.setEnabled(cuttingPlaneCheckbox.isSelected());
        colorButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorButton1ActionPerformed(evt);
            }
        });

        buttonGroup2.add(transferFunction2dButton);
        transferFunction2dButton.setText("2D Transfer function");
        transferFunction2dButton.setEnabled(cuttingPlaneCheckbox.isSelected());
        transferFunction2dButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferFunction2dButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Front mode");
        jLabel7.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(renderingSpeedLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(shadingCheckbox)
                            .addComponent(cuttingPlaneCheckbox)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(compositingButton)
                                    .addComponent(tf2dButton)
                                    .addComponent(mipButton)
                                    .addComponent(slicerButton)
                                    .addComponent(isoSurfaceButton)
                                    .addComponent(jLabel7))
                                .addGap(9, 9, 9)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(IsovalueTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(colorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(slicerButton2)
                                    .addComponent(mipButton2)
                                    .addComponent(compositingButton2)
                                    .addComponent(isosurfaceButton2)
                                    .addComponent(transferFunction2dButton))
                                .addGap(9, 9, 9)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(IsovalueTextBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(colorButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(124, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(renderingSpeedLabel))
                .addGap(18, 18, 18)
                .addComponent(shadingCheckbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cuttingPlaneCheckbox)
                .addGap(13, 13, 13)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(slicerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mipButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(compositingButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(colorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(isoSurfaceButton)
                            .addComponent(jLabel2)
                            .addComponent(IsovalueTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf2dButton)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(colorButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(slicerButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mipButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(compositingButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(IsovalueTextBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6))
                            .addComponent(isosurfaceButton2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transferFunction2dButton)
                .addContainerGap(124, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mipButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mipButtonActionPerformed
        renderer.setRaycastModeFront(RaycastMode.MIP);
        renderer.changed();
    }//GEN-LAST:event_mipButtonActionPerformed

    private void slicerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slicerButtonActionPerformed
        renderer.setRaycastModeFront(RaycastMode.SLICER);
        renderer.changed();
    }//GEN-LAST:event_slicerButtonActionPerformed

    private void compositingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compositingButtonActionPerformed
        renderer.setRaycastModeFront(RaycastMode.COMPOSITING);
        renderer.changed();
    }//GEN-LAST:event_compositingButtonActionPerformed

    private void tf2dButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf2dButtonActionPerformed
        renderer.setRaycastModeFront(RaycastMode.TRANSFER2D);
        renderer.changed();
    }//GEN-LAST:event_tf2dButtonActionPerformed

    private void shadingCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shadingCheckboxActionPerformed
        renderer.setShadingMode(((JCheckBox) evt.getSource()).isSelected());
        renderer.changed();
    }//GEN-LAST:event_shadingCheckboxActionPerformed

    private void IsovalueTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IsovalueTextBoxActionPerformed
        String s = this.IsovalueTextBox.getText();
        renderer.setIsoValueFront(Float.parseFloat(s));//set value
        renderer.changed();
    }//GEN-LAST:event_IsovalueTextBoxActionPerformed

    private void colorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorButtonActionPerformed
        // Change the color in the transfer function.
        Color newColor = JColorChooser.showDialog(this, "Choose color", colorButton.getBackground());
        if (newColor != null) {
            colorButton.setBackground(newColor);
            TFColor isoColor = new TFColor();
            isoColor.r = newColor.getRed() / 255.0;
            isoColor.g = newColor.getGreen() / 255.0;
            isoColor.b = newColor.getBlue() / 255.0;
            renderer.setIsoColorFront(isoColor);
            renderer.changed();
        }
    }//GEN-LAST:event_colorButtonActionPerformed

    private void isoSurfaceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isoSurfaceButtonActionPerformed
        renderer.setRaycastModeFront(RaycastMode.ISO_SURFACE);
        renderer.changed();
    }//GEN-LAST:event_isoSurfaceButtonActionPerformed

    private void cuttingPlaneCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuttingPlaneCheckboxActionPerformed
        boolean selected = ((JCheckBox) evt.getSource()).isSelected();
        slicerButton2.setEnabled(selected);
        mipButton2.setEnabled(selected);
        compositingButton2.setEnabled(selected);
        isosurfaceButton2.setEnabled(selected);
        IsovalueTextBox1.setEnabled(selected);
        colorButton1.setEnabled(selected);
        transferFunction2dButton.setEnabled(selected);

        renderer.setCuttingPlaneMode(selected);
        renderer.changed();
    }//GEN-LAST:event_cuttingPlaneCheckboxActionPerformed

    private void IsovalueTextBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IsovalueTextBox1ActionPerformed
        String s = this.IsovalueTextBox.getText();
        renderer.setIsoValueBack(Float.parseFloat(s));//set value
        renderer.changed();
    }//GEN-LAST:event_IsovalueTextBox1ActionPerformed

    private void colorButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorButton1ActionPerformed
        // Change the color in the transfer function.
        Color newColor = JColorChooser.showDialog(this, "Choose color", colorButton1.getBackground());
        if (newColor != null) {
            colorButton1.setBackground(newColor);
            TFColor isoColor = new TFColor();
            isoColor.r = newColor.getRed() / 255.0;
            isoColor.g = newColor.getGreen() / 255.0;
            isoColor.b = newColor.getBlue() / 255.0;
            renderer.setIsoColorBack(isoColor);
            renderer.changed();
        }
    }//GEN-LAST:event_colorButton1ActionPerformed

    private void slicerButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slicerButton2ActionPerformed
        renderer.setRaycastModeBack(RaycastMode.INVISIBLE);
        renderer.changed();
    }//GEN-LAST:event_slicerButton2ActionPerformed

    private void mipButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mipButton2ActionPerformed
        renderer.setRaycastModeBack(RaycastMode.MIP);
        renderer.changed();
    }//GEN-LAST:event_mipButton2ActionPerformed

    private void compositingButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compositingButton2ActionPerformed
        renderer.setRaycastModeBack(RaycastMode.COMPOSITING);
        renderer.changed();
    }//GEN-LAST:event_compositingButton2ActionPerformed

    private void isosurfaceButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isosurfaceButton2ActionPerformed
        renderer.setRaycastModeBack(RaycastMode.ISO_SURFACE);
        renderer.changed();
    }//GEN-LAST:event_isosurfaceButton2ActionPerformed

    private void transferFunction2dButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferFunction2dButtonActionPerformed
        renderer.setRaycastModeBack(RaycastMode.TRANSFER2D);
        renderer.changed();
    }//GEN-LAST:event_transferFunction2dButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IsovalueTextBox;
    private javax.swing.JTextField IsovalueTextBox1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton colorButton;
    private javax.swing.JButton colorButton1;
    private javax.swing.JRadioButton compositingButton;
    private javax.swing.JRadioButton compositingButton2;
    private javax.swing.JCheckBox cuttingPlaneCheckbox;
    private javax.swing.JRadioButton isoSurfaceButton;
    private javax.swing.JRadioButton isosurfaceButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JRadioButton mipButton;
    private javax.swing.JRadioButton mipButton2;
    private javax.swing.JLabel renderingSpeedLabel;
    private javax.swing.JCheckBox shadingCheckbox;
    private javax.swing.JRadioButton slicerButton;
    private javax.swing.JRadioButton slicerButton2;
    private javax.swing.JRadioButton tf2dButton;
    private javax.swing.JRadioButton transferFunction2dButton;
    // End of variables declaration//GEN-END:variables
}
